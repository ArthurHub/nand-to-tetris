// bootstrap
@256
D=A
@SP
M=D
@LCL
M=D
@ARG
M=D-1
@4000
D=A
@THIS
M=D
@5000
D=A
@THAT
M=D
// bootstrap call Sys.init
@FUNC_RETURN_Sys.init_line0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
D=M
@LCL
M=D
@5
D=A
@SP
D=M-D
@ARG
M=D
@FUNC_Sys.init
0;JMP
(FUNC_RETURN_Sys.init_line0)
// infinite loop
(INFILOOP_SimpleFunction)
@INFILOOP_SimpleFunction
0;JMP
// end bootstrap
// function SimpleFunction.test 2
(FUNC_SimpleFunction.test)
@SP
A=M
M=0
A=A+1
M=0
A=A+1
D=A
@SP
M=D
// push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M+D
// not
@SP
A=M-1
M=!M
// push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M+D
// push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// return
@SP
M=M-1
A=M
D=M
@R13
M=D
@ARG
D=M
@R14
M=D
@LCL
D=M
@SP
M=D
@SP
M=M-1
A=M
D=M
@THAT
M=D
@SP
M=M-1
A=M
D=M
@THIS
M=D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
M=M-1
A=M
D=M
@LCL
M=D
@SP
M=M-1
A=M
D=M
@R15
M=D
@R14
D=M
@SP
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
A=M
0;JMP
