// bootstrap
@256
D=A
@SP
M=D
@LCL
M=D
@ARG
M=D-1
@4000
D=A
@THIS
M=D
@5000
D=A
@THAT
M=D
// bootstrap call Sys.init
@FUNC_RETURN_Sys.init_line0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
D=M
@LCL
M=D
@5
D=A
@SP
D=M-D
@ARG
M=D
@FUNC_Sys.init
0;JMP
(FUNC_RETURN_Sys.init_line0)
// infinite loop
(INFILOOP_StaticsTest)
@INFILOOP_StaticsTest
0;JMP
// end bootstrap
// function Class1.set 0
(FUNC_Class1.set)
// push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@SP
M=M-1
A=M
D=M
@Class1.0
M=D
// push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@SP
M=M-1
A=M
D=M
@Class1.1
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@SP
M=M-1
A=M
D=M
@R13
M=D
@ARG
D=M
@R14
M=D
@LCL
D=M
@SP
M=D
@SP
M=M-1
A=M
D=M
@THAT
M=D
@SP
M=M-1
A=M
D=M
@THIS
M=D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
M=M-1
A=M
D=M
@LCL
M=D
@SP
M=M-1
A=M
D=M
@R15
M=D
@R14
D=M
@SP
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
A=M
0;JMP
// function Class1.get 0
(FUNC_Class1.get)
// push static 0
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// return
@SP
M=M-1
A=M
D=M
@R13
M=D
@ARG
D=M
@R14
M=D
@LCL
D=M
@SP
M=D
@SP
M=M-1
A=M
D=M
@THAT
M=D
@SP
M=M-1
A=M
D=M
@THIS
M=D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
M=M-1
A=M
D=M
@LCL
M=D
@SP
M=M-1
A=M
D=M
@R15
M=D
@R14
D=M
@SP
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
A=M
0;JMP
// function Class2.set 0
(FUNC_Class2.set)
// push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@SP
M=M-1
A=M
D=M
@Class2.0
M=D
// push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@SP
M=M-1
A=M
D=M
@Class2.1
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@SP
M=M-1
A=M
D=M
@R13
M=D
@ARG
D=M
@R14
M=D
@LCL
D=M
@SP
M=D
@SP
M=M-1
A=M
D=M
@THAT
M=D
@SP
M=M-1
A=M
D=M
@THIS
M=D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
M=M-1
A=M
D=M
@LCL
M=D
@SP
M=M-1
A=M
D=M
@R15
M=D
@R14
D=M
@SP
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
A=M
0;JMP
// function Class2.get 0
(FUNC_Class2.get)
// push static 0
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// return
@SP
M=M-1
A=M
D=M
@R13
M=D
@ARG
D=M
@R14
M=D
@LCL
D=M
@SP
M=D
@SP
M=M-1
A=M
D=M
@THAT
M=D
@SP
M=M-1
A=M
D=M
@THIS
M=D
@SP
M=M-1
A=M
D=M
@ARG
M=D
@SP
M=M-1
A=M
D=M
@LCL
M=D
@SP
M=M-1
A=M
D=M
@R15
M=D
@R14
D=M
@SP
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
A=M
0;JMP
// function Sys.init 0
(FUNC_Sys.init)
// push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class1.set 2
@FUNC_RETURN_Class1.set_line10
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
D=M
@LCL
M=D
@7
D=A
@SP
D=M-D
@ARG
M=D
@FUNC_Class1.set
0;JMP
(FUNC_RETURN_Class1.set_line10)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class2.set 2
@FUNC_RETURN_Class2.set_line14
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
D=M
@LCL
M=D
@7
D=A
@SP
D=M-D
@ARG
M=D
@FUNC_Class2.set
0;JMP
(FUNC_RETURN_Class2.set_line14)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// call Class1.get 0
@FUNC_RETURN_Class1.get_line16
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
D=M
@LCL
M=D
@5
D=A
@SP
D=M-D
@ARG
M=D
@FUNC_Class1.get
0;JMP
(FUNC_RETURN_Class1.get_line16)
// call Class2.get 0
@FUNC_RETURN_Class2.get_line17
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
D=M
@LCL
M=D
@5
D=A
@SP
D=M-D
@ARG
M=D
@FUNC_Class2.get
0;JMP
(FUNC_RETURN_Class2.get_line17)
// label WHILE
(Sys_WHILE)
// goto WHILE
@Sys_WHILE
0;JMP
